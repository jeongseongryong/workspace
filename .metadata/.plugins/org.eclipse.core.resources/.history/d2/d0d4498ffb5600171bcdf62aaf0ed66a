package step28.ex2;
/* JDBC bye
 */


import java.util.HashMap;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;


public class MemberDaoImpl implements MemberDao{
  SqlSessionFactory sqlSessionFactory;

	public void setSqlSessionFactory(SqlSessionFactory sqlSessionFactory) {
		this.sqlSessionFactory = sqlSessionFactory;
	}

	public List<Member> selectList(int pageNo, int pageSize) throws Exception {
			SqlSession sqlSession = sqlSessionFactory.openSession();
			try {	
			HashMap<String, Object> valueMap = new HashMap<>();
			valueMap.put("startIndex", (pageNo - 1) * pageSize);
			valueMap.put("pageSize", pageSize);
			
			return sqlSession.selectList("step28.ex2.MemberDao.selectList", valueMap);
			
			} finally { 
	     sqlSession.close();
	    }		
	}
	
  public Member selectOne(int no) throws Exception {
  	SqlSession sqlSession = sqlSessionFactory.openSession();
		
  	try {		
			return sqlSession.selectOne("step28.ex2.MemberDao.selectOne", no);
			
		} finally { 
     sqlSession.close();
    }	
  	
  }

  public Member selectOneByEmailPassword(String email, String password) throws Exception {
		SqlSession sqlSession = sqlSessionFactory.openSession();
				
	  try {
	  		HashMap<String,Object> valueMap = new HashMap<>();
	  		valueMap.put("email", email);
	  		valueMap.put("password", password);
				return sqlSession.selectOne("step28.ex2.MemberDao.selectByEmailPassword", valueMap);
			
		} finally { 
     sqlSession.close();
    }	
	
  }
  
  public int insert(Member member) throws Exception {
  	SqlSession sqlSession = sqlSessionFactory.openSession();
		
	  try {  	
			int count = sqlSession.insert("step28.ex2.MemberDao.insert", member);
		
			sqlSession.commit();
			
			return count;
							
		} finally { 
     sqlSession.close();
    }	
	
  }
  
  
  public int update(Member member) throws Exception {
		SqlSession sqlSession = sqlSessionFactory.openSession();
				
		  try {  	
				int count = sqlSession.update("step28.ex2.MemberDao.insert", member);
			
				sqlSession.commit();
				
				return count;
								
			} finally { 
	     sqlSession.close();
	    }	
  	/*
    Connection con = conPool.getConnection();
    try (
      PreparedStatement stmt = con.prepareStatement(
          "update memb set name=?, tel=?, email=?, pwd=password(?) where mno=?");) {
      
      stmt.setString(1, member.getName());
      stmt.setString(2, member.getTel());
      stmt.setString(3, member.getEmail());
      stmt.setString(4, member.getPassword());
      stmt.setInt(5, member.getNo());
      return stmt.executeUpdate();
    
    } finally { 
      conPool.returnConnection(con);
    }
    */
    return 0;
  }
  
  public int delete(int no) throws Exception {
  	/*
    Connection con = conPool.getConnection();
    try (
      PreparedStatement stmt = con.prepareStatement(
          "delete from memb where mno=?");) {
      
      stmt.setInt(1, no);
      return stmt.executeUpdate();
    
    } finally { 
      conPool.returnConnection(con);
    }
  	 */
  	return 0;
  }
  
}
