<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="step28.ex4.MemberDao">

	<resultMap type="member" id="memberMap">
		<id column="mno" property="no"/>
		<result column="email" property="email"/>
		<result column="name" property="name"/>
		<result column="tel" property="tel"/>
		<result column="pwd" property="password"/>
		<result column="hmpg" property="homepage"/>
		<result column="fcbk" property="facebook"/>
		<result column="twit" property="twitter"/>
	</resultMap>
	
	
  <select id="selectList" resultMap="memberMap" parameterType="map">
  	select m.mno, m.name, m.tel, m.email, t.hmpg 
    from tcher t inner join memb m on t.tno=m.mno 
    order by m.name asc
    limit ?, ?
    order by name asc
    limit #{startIndex}, #{pageSize}
  </select>
  
  <select id="selectListByNames" resultMap="memberMap" parameterType="map">
 		<include refid="select1"/>
		<if test="names != null">
 			<where>
 				name in
				<foreach collection="names"  item="name"  open="(" close=")"  separator=",">
         #{name}
        </foreach>
 			</where>
		</if>
    order by name asc
    limit #{startIndex}, #{pageSize}
  </select>
  
  <select id="selectListByEmail" resultMap="memberMap" parameterType="map">
 		<include refid="select1"/>
 		where email=#{email}
    order by name asc
    limit #{startIndex}, #{pageSize}
  </select>
  
  <select id="selectListByName" resultMap="memberMap" parameterType="map">
 		<include refid="select1"/>
 		where name like concat('%', #{name}, '%')
    order by name asc
    limit #{startIndex}, #{pageSize}
  </select>
  
  <select id="selectListByTel" resultMap="memberMap" parameterType="map">
 		<include refid="select1"/>
 		where name like concat('%', #{tel}, '%')
    order by name asc
    limit #{startIndex}, #{pageSize}
  </select>
  
  <select id="selectOne" resultMap="memberMap" parameterType="int">
    <include refid="select1"/>
     where mno=#{memberNo}
  </select>
  
  <select id="selectByEmailPassword" resultMap="memberMap" parameterType="map">
     <include refid="select1"/>
     where email=#{email} and pwd=password(#{password})
  </select>
  
  <insert id="insert"  parameterType="member">
     insert into memb(name,tel,email,pwd)
     values(#{name},#{tel},#{email},password(#{password}))
  </insert>
  
  <update id="update"  parameterType="member">
     update memb set 
     name=#{name},
     tel=#{tel},
     email=#{email},
     pwd=password(#{password})
     where mno=#{no}
  </update>
  
  <delete id="delete"  parameterType="member">
     delete from memb
     where mno=#{memberNo}
  </delete>
  
</mapper>