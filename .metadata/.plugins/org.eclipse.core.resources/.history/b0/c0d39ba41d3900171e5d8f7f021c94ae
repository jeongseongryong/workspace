/*목록을 다루는 클래스 구현
 */
package step08;

 class Test06_3_LinkedList3 {
	class Buket { //인스턴스 멤버들만사용.. , 값을 보관하고, 다음 값의 위치 정보를 보관한다.
		Object value;
		Buket next;
	}
	
	Buket start;
	Buket end;
	private int length;
				
	public Test06_3_LinkedList3() {
		start = new Buket();
		end = start;
	}
	
	

  public void add(Object obj) {
		end.value = obj;
		
		Buket temp = new Buket();
		end.next = temp;
		end = temp;
		length++;		
  } 
  
  
  public void add(int index, Object obj) {
  	/*
  	if(length == list.length) {
  		increaseList();
  	}
  	if(index < 0 || index > length) {
  		throw new RuntimeException("인덱스 번호가 범위를 넘어갑니다.");
  	}
  	if (index < length) { // 맨 마지막 값부터 index가 가리키는 방의 값까지 반복하면서 뒤로 한칸씩미룬다 
  		for(int i = length; i > index; i--) {
  			list[i] = list[i - 1];
  		}
  	}
  	list[index] = obj;
  	length++;
  } // add
  */
  	
  
	private void increaseList() {
		Object[] newList = new Object[list.length + GROW_SIZE]; //새배열을만든다.
		for (int i = 0; i < list.length; i++) {
			newList[i] = list[i];
		}
		list = newList;
	} // increaseList
	
	public int size() {
		return length;
	}
	
	public Object get(int index) {
		if (index < 0 && index >= length) {
		  throw new RuntimeException("배열 인덱스의 범위를 벗어났습니다");
	}
		
 } //get
   */
  	
	public Object remove(int index) {
  	 /*	
		if (index < 0 && index >= length) {
		  throw new RuntimeException("배열 인덱스의 범위를 벗어났습니다");
		}
		
		Object removedObj = list[index];
		
		if (index < (length - 1)) {
			for (int i = index; i  < (length - 1); i++) {
				list[i] = list[i+1];
			}
		}
		length--;
		return removedObj;		
	}	// remove
	*/
  	 return null;
  	
	/*
	public Object set(int index, Object obj) {
		if (index < 0 && index >= length) {
		  throw new RuntimeException("배열 인덱스의 범위를 벗어났습니다");
		}
		
		Object oldObj = list[index];
		list[index] = obj;
		return oldObj;
	 */
	}	// set
}  
	

