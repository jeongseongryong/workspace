/* 로그인 서블릿: .*/
package bitcamp.java93.servlet;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import bitcamp.java93.domain.Member;
import bitcamp.java93.service.TeacherService;

@WebServlet(urlPatterns="/auth/login")
public class LoginServlet extends HttpServlet  {
  private static final long serialVersionUID = 1L;
  
  @Override
  protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
  		RequestDispatcher rd = req.getRequestDispatcher("/auth/form.jsp");
  		rd.forward(req, resp);
  	}
  	
  @Override
  public void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
  	String userType = req.getParameter("userType");
    String email = req.getParameter("email");
    String password = req.getParameter("password");
            
    try {
    	Member member = null;
    	if (userType.equals("student")) {
    		
    	} else if (userType.equals("teacher")) {
    		TeacherServiceImpl teacherService = 
    				(TeacherServiceImpl)this.getServletContext().getAttribute("teacherService");
    		member = teacherService.getEmailPassword(email,password);
    	}
      
//      MemberDao memberDao = (MemberDao)this.getServletContext().getAttribute("memberDao"); 
//      Member member = memberDao.selectOneByEmailPassword(email, password);
      if (member != null) { //로그인에 성공!             
        HttpSession session = req.getSession(); // 클라이언트 객체 준비
        
        session.setAttribute("loginMember", member);
        
        
        // 이메일을 저장, 제거
        String saveEmail = req.getParameter("saveEmail");
        if (saveEmail != null) {
        	Cookie cookie2 = new Cookie("email", email);
        	cookie2.setMaxAge(60 * 60 * 24 * 7); // 7일간유지
        	res.addCookie(cookie2);
        } else {
        	Cookie cookie2 = new Cookie("email", "");
        	cookie2.setMaxAge(0); // 유효기간 0이면 즉시 무효화 ,제거하라는의미
        	res.addCookie(cookie2);
        }
        
        res.sendRedirect("../teacher/list");
        
      } else {
      	RequestDispatcher rd = req.getRequestDispatcher("/auth/fail.jsp");
        rd.forward(req, res);
      }
            
    } catch(Exception e) {
      req.setAttribute("error", e); //포워딩 하기 전에 서블릿리퀘스트 보관소에 오류 정보를 보관한다.
      RequestDispatcher rd = req.getRequestDispatcher("/error.jsp");
      rd.forward(req, res);
      return;
    }   
  }  
}


